########## Prefix key
#unbind-key C-b
#set -g prefix C-a
#bind-key C-a send-prefix
#bind-key -r C-a send-prefix

# remap used by others:
# M-a (reverse-sentence in emacs)


########## Reload
bind-key r source-file $HOME/.tmux.conf \; display-message "$HOME/.tmux.conf Reloaded!"
bind-key R source-file $HOME/.tmux.conf \; display-message "$HOME/.tmux.conf Reloaded!"


########## Quick binding
# Move
#bind-key -n C-h select-pane -L
#bind-key -n C-j select-pane -D
#bind-key -n C-k select-pane -U
#bind-key -n C-l select-pane -R
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D
# Resize
# bind-key -n M-S-Left resize-pane -L 2
# bind-key -n M-S-Right resize-pane -R 2
# bind-key -n M-S-Up resize-pane -U 1
# bind-key -n M-S-Down resize-pane -D 1
# Unbind to have the same behavior
unbind-key -T copy-mode M-Left
unbind-key -T copy-mode M-Right
unbind-key -T copy-mode M-Up
unbind-key -T copy-mode M-Down
unbind-key -T copy-mode M-S-Left
unbind-key -T copy-mode M-S-Right
unbind-key -T copy-mode M-S-Up
unbind-key -T copy-mode M-S-Down


########## Binding
## copy
#bind-key -n -T copy-mode M-w send-keys -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c"
#bind-key -n -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c"
bind-key -n -T copy-mode M-w send-keys -X copy-pipe "xsel -i -p ; xsel -o -p | xclip -i -b"
bind-key -n -T copy-mode MouseDragEnd1Pane send-keys -X copy-pipe "xsel -i -p ; xsel -o -p | xclip -i -b"

## session
bind-key B send-keys 'wtmux && exit' 'C-m'
bind-key K confirm-before -p "kill-session #S? (y/n)" kill-session
bind-key X run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'
bind-key N switch-client -n
bind-key P switch-client -p
#bind-key C new -A -c '#{pane_current_path}' -s '#{session_name}-2'
#bind-key C run-shell 'tmux new-session -d -c "#{pane_current_path}" -s "#{session_name}-2"' \; switch-client -n
bind-key C send-keys 'wtmux' 'C-m'
bind-key S command-prompt -p 'session name: ' "new -A -s '%%' -c '#{pane_current_path}'"

## window
bind-key - split-window -v -c '#{pane_current_path}'
bind-key \\ split-window -h -c '#{pane_current_path}'
bind-key | split-window -h -c '#{pane_current_path}'
bind-key / new-window -c '#{pane_current_path}'
bind-key < swap-window -t -1
bind-key > swap-window -t +1
bind-key k confirm-before -p "kill-window #W? (y/n)" kill-window

## layout
bind-key M-6 run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 67"
bind-key M-7 run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 33"
bind-key M-8 run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-horizontal -p 67"
bind-key M-9 run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-horizontal -p 33"

## pane
bind-key v display-panes -d 3000
bind-key b break-pane -d
bind-key O select-pane -t :.-
bind-key = set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"
bind-key * display-panes\; command-prompt -p 'pane #: ' "swap-pane -t '%%'"
bind-key + command-prompt -p 'join pane from: ' "join-pane -h -s '%%'"

## command
bind-key C-t split-window -h -c ~/ 'htop'
bind-key C-e split-window -h -c ~/ 'e'
bind-key C-l split-window -h -c ~/ 'etodo'
bind-key C-s split-window -v -c ~/ 'watch -n 10 sensors'
#bind-key w split-window -h -c ~/work "vim +CtrlP"


########## Options
# Status bar
set-option -g status on
set-option -g status-style default
set-option -g status-keys 'emacs'
set-option -g status-interval 10
set-option -g status-left-length 50
set-option -g status-right-length 50
#set-option -g status-bg black
#set-option -g status-fg red
#set-option -g status-bg green
#set-option -g status-fg black
#set-option -g status-bg '#666666'
#set-option -g status-fg '#aaaaaa'
set-option -g status-bg '#555555'
set-option -g status-fg '#aaaaaa'
#set-option -g status-left '[#S](#I:#P) '
set-option -g status-left '[#S:#I.#P] '
#set-option -g status-right " #(date '+%a, %b %d - %I:%M') "
#set-option -g status-right ' [#I-#P] [#h %Y-%m-%d %H:%M:%S]'
#set-option -g status-right '[#h###S:#I:#P]'
#set-option -g status-right ' [%Y-%m-%d %H:%M:%S] [#(whoami)@#h]'
set-option -g status-right '#(load_avg -t " %%s")#(battery -t " %%s") [%H:%M:%S] [#(whoami)@#h]'
# set-option -g status-position top

# Window
#set-window-option -g window-status-current-format "#[fg=default,bg=default,default]#I:#W*"
set-window-option -g window-status-current-style "fg=yellow,bg=default"
#set -g window-style 'fg=colour247,bg=colour236'
#set -g window-active-style 'fg=colour250,bg=black'
#set -g window-style 'bg=colour235'
#set -g window-active-style 'bg=black'

# Pane
set-option -g pane-active-border-style bg=default,fg=yellow
set-option -g pane-border-style fg=default

# Mode
set-option -g mode-keys emacs

# Index : start window numbers at 1 to match keyboard order with tmux window order
set-option -g base-index 1
set-window-option -g pane-base-index 1
# Index : renumber windows sequentially after closing any of them
set-option -g renumber-windows on

# Color
set-option -g default-terminal 'screen-256color'
# History
set-option -g history-limit 30000
# display time
#set-option -g display-panes-time 2000
#set-option -g display-time 2000
# misc
set-option -gw xterm-keys on

# loud or quiet?
set-option -g visual-activity on
set-option -g visual-bell off
set-option -g visual-silence off
set-option -g bell-action none

# visual notification of activity
#setw -g monitor-activity on
#set -g visual-activity on

# mouse
set-option -g mouse off


########## custom workflow
#bind-key h split -h 'htop'
#bind-key t split-window -h -c "$HOME" 'vim todo.md'


########## help !
## all available commands
#> tmux list-commands
#> tmux list-commands | grep pane (to search pane related commands)
## list all key bindings (live)
#> tmux list-keys
## list all bindings
#> <prefix> ?
## dump current conf
#> tmux show -g
