#!/bin/sh
# -*- mode: sh -*-



########## rbenv
rbenv_guess_path()
{
    rbenv_guess_path="${1}"
    rbenv_guess_path="${rbenv_guess_path:-$(rbenv root 2>/dev/null)}"
    rbenv_guess_path="${rbenv_guess_path:-$RBENV_ROOT}"
    rbenv_guess_path="${rbenv_guess_path:-$HOME/.rbenv}"
}

rbenv_load()
{
    rbenv_guess_path "$1"
    RBENV_ROOT="$rbenv_guess_path"
    export RBENV_ROOT
    PATH="$RBENV_ROOT/bin:$PATH"
    export PATH
    eval "$(rbenv init -)"
    #[ -r "$RBENV_ROOT/completions/rbenv.${SHELL_SHORT}" ] &&
    #    . "$RBENV_ROOT/completions/rbenv.${SHELL_SHORT}"
}



########## rvm
rvm_load()
{
    source "${1:-$HOME/.rvm/scripts/rvm}"
}



########## env
ruby_env()
{
    [ -n "$ruby_env" ] && return 0

    for _RUBY_HOME in "${HOME_ALT}" "${HOME}"; do
        _RUBY_RBENV_AVAILABLE=false
        _RUBY_RBENV_ROOT="$_RUBY_HOME/.rbenv"
        ( cd "$_RUBY_RBENV_ROOT" 2>/dev/null ) && [ -x "$_RUBY_RBENV_ROOT/bin/rbenv" ] && _RUBY_RBENV_AVAILABLE=true

        _RUBY_RVM_AVAILABLE=false
        _RUBY_RVM_ROOT="$_RUBY_HOME/.rvm"
        ( cd "$_RUBY_RVM_ROOT" 2>/dev/null ) && [ -x "$_RUBY_RVM_ROOT/scripts/rvm" ] && _RUBY_RVM_AVAILABLE=true

        if $_RUBY_RBENV_AVAILABLE; then
            rbenv_load "$_RUBY_RBENV_ROOT"
            ruby_env="rbenv"
            break
        elif $_RUBY_RVM_AVAILABLE; then
            rvm_load "$_RUBY_RVM_ROOT"
            ruby_env="rvm"
            break
        fi
    done
}

ruby_env



########## gem
GEM_PACK_ASCIIDOC="asciidoctor asciidoctor-pdf asciidoctor-revealjs rouge"
GEM_PACK_CAPISTRANO="capistrano"
GEM_PACK_CLI="gli main"
GEM_PACK_FLUENTD="fluentd fluent-plugin-kafka fluent-plugin-elasticsearch fluent-plugin-rewrite-tag-filter fluent-plugin-rename-key fluent-plugin-record-modifier fluent-plugin-flowcounter-simple fluent-plugin-http-healthcheck"
GEM_PACK_JEKYLL="jekyll"
GEM_PACK_MINA="mina"
GEM_PACK_PUPPET="metadata-json-lint pdk puppet-lint"
GEM_PACK_QUALITY="rubocop reek flay flog erb_lint"
GEM_PACK_RACK="rack shotgun"
GEM_PACK_RAILS="rails rails-erb-lint rspec-rails"
GEM_PACK_RSPEC="rspec"
GEM_PACK_SINATRA="sinatra"
GEM_PACK_TEXT="octodown $GEM_PACK_ASCIIDOC"
GEM_PACK_TOOLS="quick_and_ruby semver tmuxinator gli"
GEM_PACK_UTILS="$GEM_PACK_TOOLS"
GEM_PACK_WWW="nanoc middleman middleman-livereload puma webrick"

_gem_pack_1()
{
    _gem_pack_1="$1"

    _gem_pack_1__content=
    if [ "$_gem_pack_1" = "all" ]; then
        for _gem_pack_1__pack in `set | egrep -a '^GEM_PACK_[A-Z]*=' | cut -d '=' -f 1`; do
            eval _gem_pack_1__content="\${_gem_pack_1__content:+$_gem_pack_1__content }\$$_gem_pack_1__pack"
        done
    else
        eval _gem_pack_1__content="\${GEM_PACK_`echo $gem_pack | tr '[a-z]' '[A-Z]'`}"
    fi

    if [ -z "$_gem_pack_1__content" ]; then
        echo >&2 "gem pack \"$gem_pack\" is empty"
        return 2
    fi

    gem install $_gem_pack_1__content
    return $?
}

gem_pack()
{
    if [ $# -eq 0 ]; then
        echo Choose pack in:
        for gem_pack in $(set | grep '^GEM_PACK_.*=' | sed -e 's/GEM_PACK_\([^=]*\).*/\1/g' | tr '[A-Z]' '[a-z]') ; do
            echo "  $gem_pack"
        done
        return 0
    fi

    gem_pack__ret=0
    for gem_pack; do
        _gem_pack_1 "$gem_pack" ||
            gem_pack__ret=1
    done
    return $gem_pack__ret
}



########## extra Ruby env
rubyenv_guess_root()
{
    eval rubyenv_guess_root="\$$1"
    if [ -z "$rubyenv_guess_root" ]; then
        rubyenv_guess_root_=
        # existing ?
        for rubyenv_guess_root__h in "${HOME_ALT}" "${HOME}"; do
            [ -z "$rubyenv_guess_root__h" ] && continue
            [ -z "$rubyenv_guess_root_" ] && rubyenv_guess_root_="${rubyenv_guess_root__h}/${2}"
            if [ -d "${rubyenv_guess_root__h}/${2}" ]; then
                rubyenv_guess_root="${rubyenv_guess_root__h}/${2}"
                break
            fi
        done
        # set default
        [ -z "$rubyenv_guess_root" ] && rubyenv_guess_root="$rubyenv_guess_root_"

        eval "$1"="$rubyenv_guess_root"
        export "$1"
    fi
}

rubyenv_guess_root RUBY_BUILD_ROOT local/ruby-build
rubyenv_guess_root RUBY_INSTALL_ROOT local/ruby-install



########## interactive
bundle_exec()
{
    bundle exec "$@"
}

be()
{
    bundle_exec "$@"
}
bexec()
{
    bundle_exec "$@"
}
brake()
{
    bundle_exec rake "$@"
}
bruby()
{
    bundlex_exec ruby "$@"
}
brb()
{
    bruby "$@"
}
birb()
{
    bundle_exec irb "$@"
}
brails()
{
    bundle_exec rails "$@"
}
bconsole()
{
    bundle_exec console "$@"
}
brubocop()
{
    bundle_exec rubocop "$@"
}
brcop()
{
    bundle_exec rubocop "$@"
}
brspec()
{
    bundle_exec rspec "$@"
}
bguard()
{
    bundle_exec guard "$@"
}
bcap()
{
    bundle_exec cap "$@"
}
bjekyll()
{
    bundle_exec jekyll "$@"
}
bjekylls()
{
    bjekyll serve --drafts --livereload --watch "$@"
}
bnanoc()
{
    bundle_exec nanoc "$@"
}
bnanocs()
{
    bnanoc view -L "$@"
}
bmiddleman()
{
    bundle_exec middleman "$@"
}
bmiddlemans()
{
    bmiddleman server "$@"
}


Bexec()
{
    bundle_exec "$@"
}
Brake()
{
    bundle_exec rake "$@"
}
Bruby()
{
    bundle_exec ruby "$@"
}
Brails()
{
    bundle_exec rails "$@"
}
Bconsole()
{
    bundle_exec console "$@"
}
Birb()
{
    bundle_exec irb "$@"
}
Brubocop()
{
    bundle_exec rubocop "$@"
}
Brcop()
{
    bundle_exec rubocop "$@"
}
Brspec()
{
    bundle_exec rspec "$@"
}
Bguard()
{
    bundle_exec guard "$@"
}
Bcap()
{
    bundle_exec cap "$@"
}
Bjekyll()
{
    bundle_exec jekyll "$@"
}
Bjekylls()
{
    bundle_exec jekyll serve --drafts --livereload --watch "$@"
}
Bjekylls2()
{
    bundle_exec jekyll serve --port 4001 --drafts --livereload --livereload-port 4011 --watch "$@"
}
Bnanoc()
{
    bundle_exec nanoc "$@"
}
Bnanocs()
{
    Bnanoc view -L "$@"
}
Bmiddleman()
{
    bundle_exec middleman "$@"
}
Bmiddlemans()
{
    Bmiddleman server "$@"
}
