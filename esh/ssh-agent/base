#!/bin/sh
# -*- mode: sh -*-

ESH_TRUSTED_HOST=false
ESH_TRUSTED_CONF="$ESH_DIR/conf/trusted_host"
if [ -r "$ESH_TRUSTED_CONF" ]; then
    for h in `cat "$ESH_TRUSTED_CONF"`; do
        if [ "$h" = "$HOSTNAME" ] || [ "$h" = "$SHORT_HOSTNAME" ]; then
            ESH_TRUSTED_HOST=true
            break
        fi
    done
fi
export ESH_TRUSTED_HOST

# DISPLAY= ssh-keygen -q -y -f id_ed25519 </dev/null
# DISPLAY= ssh-keygen -q -y -f id_rsa_test </dev/null

sshkey_protected()
{
    DISPLAY= ssh-keygen -q -y -f "$1" </dev/null 2>/dev/null >/dev/null && return 1
    return 0
}

KEYCHAIN_DIR="$ESH_MODULE_DIR"

keychain()
{
    [ -x "$KEYCHAIN_DIR/keychain" ] || return 1

    "$KEYCHAIN_DIR/keychain" "$@"
}

keychain_load()
{
    [ -d "$HOME/.ssh" ] || return 1
    [ -x "$KEYCHAIN_DIR/keychain" ] || return 1

    keychain_load__login=
    [ "$1" = "login" ] && keychain_load__login=true

    [ -r "$HOME/.ssh/keychain/$HOSTNAME-sh" ] && \
        . "$HOME/.ssh/keychain/$HOSTNAME-sh"

    keychain_load__key=
    for keyfile in "$HOME/.ssh"/*; do
        [ -d "$keyfile" ] && continue
        [ ! -r "$keyfile" ] && continue
        case "$keyfile" in
            id_*.pub) continue ;;
            id_*) ;;
            *) case `file -b "$keyfile"` in
                   *" private key") ;;
                   *) continue ;;
               esac
               ;;
        esac
        if [ -z "$keychain_load__login" ] || ! sshkey_protected "$keyfile"; then
            keychain_load__key="${keychain_load__key:+$keychain_load__key }$keyfile"
        fi
    done

    if [ -n "$keychain_load__key" ]; then
        keychain --quiet --attempts 1 --dir "$HOME/.ssh/keychain" $keychain_load__key
    fi

    [ -r "$HOME/.ssh/keychain/$HOSTNAME-sh" ] && \
        . "$HOME/.ssh/keychain/$HOSTNAME-sh"
}

if [ -n "$ESH_TRUSTED_HOST" ] && $ESH_TRUSTED_HOST; then
    keychain_load login
fi
